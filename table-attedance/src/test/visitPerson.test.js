import { visitPerson } from "../visitPerson/visitPerson";

describe('visitPerson', () => {
  test('Отпуск начинается одном месяце, а заканчивается в следующем', () => {
    expect(visitPerson([["30.01.24", "03.02.24"]])).toEqual({
      24: {
        1: new Set([30, 31]),
        2: new Set([1, 2, 3]),
      }
    });
  });

  test('vacation easy', () => {
    const vacation1 = [
      ["21.04.24", "24.04.24"],
      ["06.05.24", "13.05.24"],
      ["24.05.24", "08.06.24"],
      ["28.06.24", "18.07.24"],
    ];

    const result1 = {
      24: {
        4: new Set([21, 22, 23, 24]),
        5: new Set([6, 7, 8, 9, 10, 11, 12, 13, 24, 25, 26, 27, 28, 29, 30, 31]),
        6: new Set([1, 2, 3, 4, 5, 6, 7, 8, 28, 29, 30, 30]),
        7: new Set([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18]),
      },
    };

    expect(visitPerson(vacation1)).toEqual(result1);
  })

  test('vacation average', () => {
    const vacation2 = [
      ['29.12.24', '05.01.25'],
      ['01.01.24', '01.03.24']
    ]

    const result2 = {
      24: {
        1: new Set([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31]),
        2: new Set([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29]),
        3: new Set([1]),
        12: new Set([29, 30, 31]),
      },
      25: {
        1: new Set([1, 2, 3, 4, 5])
      }
    }

    expect(visitPerson(vacation2)).toEqual(result2)
  }
  )

  test('vacation hard', () => {
    const vacation3 = [
      ['29.12.23', '04.03.24'],
      ['11.09.24', '11.04.25']
    ]


    const result3 = {
      23: {
        12: new Set([29, 30, 31])
      },
      24: {
        1: new Set([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31]),
        2: new Set([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29]),
        3: new Set([1, 2, 3, 4]),
        9: new Set([11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30]),
        10: new Set([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31]),
        11: new Set([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30]),
        12: new Set([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31])
      },
      25: {
        1: new Set([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31]),
        2: new Set([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28]),
        3: new Set([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31]),
        4: new Set([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11])
      }
    };
    expect(visitPerson(vacation3)).toEqual(result3)
  })

  test('[01.01.23, 10.01.23]', () => {
    const vacation4 = [['01.01.23', '10.01.23']]

    const result4 = {
      23: {
        1: new Set([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])
      }
    }

    expect(visitPerson(vacation4)).toEqual(result4)
  })
})


